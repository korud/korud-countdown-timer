// include the library code:
#include <LiquidCrystal.h>
LiquidCrystal lcd (16, 17, 23, 25, 27, 29);

// Buttons
#define select_btn 2
#define ok_btn 3

// LEDs
#define green_led 10
#define yellow_led 9
#define red_led 8

// Buzzer
#define buzzer 37

// Definimos tiempos
int ahoras = 0;            //Variable a mostrar por LCD de las horas 
int aminutos = 0;          //Variable a mostrar por LCD de los minutos 
int asegundos = 0;         //Variable a mostrar por LCD de los segundos 
int segundosprevio = 0;   //Inciar variaable para para mostrar por LCD de los segundos
int segundostotal = 0;     //Tiempo total
int segundosdescanso = 0;  //Segundos de descanso
int tiempoprevio = 15;  //Segundos preparaciÃ³n antes del combate

int select_btn_state = 0; 
int select_btn_last_state = 0; 
int ok_btn_state = 0; 
int ok_btn_last_state = 0;
int i = 0;
int rounds = 0; 
long rounds_time = 0; 
long rest_time = 0;

void setup() {
  pinMode (select_btn, INPUT); 
  pinMode (ok_btn, INPUT);
  pinMode (green_led, OUTPUT); 
  pinMode (yellow_led, OUTPUT); 
  pinMode (red_led, OUTPUT);
  pinMode (buzzer, OUTPUT);
  //configuracion de pantalla columnas,filas
  lcd.begin(20, 4);
  //mensaje de inicio
  lcd.setCursor(2,0);lcd.print("Boxing Timer V2");lcd.setCursor(5, 1); lcd.print("By Korud");delay (2000); 
}
/*void(* resetFunc) (void) = 0; //Funcion reset que luego llamamos
select_btn_state = digitalRead(select_btn); 
      ok_btn_state = digitalRead(ok_btn);
       if ((select_btn_state == 1) && (ok_btn_state == 1)) {
      lcd.print ("Reset");  
       delay(5000);
      resetFunc(); }*/
void loop() {
  //definimos variables a 0
  rounds = 0; 
  rounds_time = 0; 
  rest_time = 0;
  digitalWrite (red_led, HIGH); 
  //Pantalla inicial para elegir Rounds
  lcd.clear();lcd.print ("Rounds: 1-30?");lcd.setCursor(0,1);lcd.print ("Select para elegir");
  do{
    //leemos pulsaciones y convertimos a variable el valor
    select_btn_state = digitalRead(select_btn);
    ok_btn_state = digitalRead(ok_btn);
    //Si se detecta pulsacion en boton select sumamos 1 al valor anterior
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rounds = rounds + 1;  
        if(rounds == 31){
          rounds = 1;
        }
        //Actualizamos mensaje con el nuevo valor
        lcd.clear();lcd.print("Rounds: ");lcd.print(rounds);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }
  }while (ok_btn_last_state == 0); 
  //Mostramos Mensaje menu 2   
  lcd.clear(); lcd.print ("Tiempo rounds: ?"); lcd.setCursor(0,1); lcd.print ("Select para elegir");delay(200); 
  //Definimos el ultimo estado del boton ok a 0
  ok_btn_last_state = 0;
  do{
    //leemos pulsaciones y convertimos a variable el valor
    select_btn_state = digitalRead(select_btn); 
    ok_btn_state = digitalRead(ok_btn);
    //Si se detecta pulsacion en boton select sumamos 30 al valor anterior
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rounds_time = rounds_time + 30;  
        //Reinicimos a en 330
          if(rounds_time == 330){
            rounds_time =30;
          }
        //Actualizmos mensaje del menu 2
        lcd.clear();lcd.print("Tiempo rounds: ");lcd.print(rounds_time);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }   
  }while (ok_btn_last_state == 0);
  //Mostramos Mensaje menu 3   
  lcd.clear();lcd.print ("Tiempo descanso: ?");lcd.setCursor(0,1);lcd.print ("Select para elegir");delay(200); 
  ok_btn_last_state = 0;
  do{
    select_btn_state = digitalRead(select_btn); 
    ok_btn_state = digitalRead(ok_btn);
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rest_time = rest_time + 30;  
        //Reinicimos a en 330
          if(rest_time == 330){
            rest_time =30;
          }
          //Actualizmos mensaje del menu 3
        lcd.clear();lcd.print("Tiempo descanso: ");lcd.print(rest_time);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque  
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continumos
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }   
  }while (ok_btn_last_state == 0);
    delay(200); 
    ok_btn_last_state = 0;
//-----------------------------------Fin menus----------------------------------------
  //tiempo preparacion
  segundosprevio = tiempoprevio; //Despues del bucle se queda en 0, Igualamos para tener valor en siguientes juegos.
  while (segundosprevio > 0){
      delay (1000);          //Descontamos en periodos de 1 segundo
        segundosprevio--;    
        ahoras = ((segundosprevio / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundosprevio / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundosprevio % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear (); lcd.setCursor(3,0); lcd.print ("Tiempo previo");
        lcd.setCursor(6,1);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
  //Correr programa principal
  //Tiempo de round
  for (i=1; i<= rounds; i++) {
    digitalWrite (green_led,HIGH);   
    
    segundostotal = rounds_time;
    while (segundostotal > 0){      
      delay (1000);          //Descontamos en periodos de 1 segundo
       //Encendemos Timbre en el segundo 0
      if (segundostotal == rounds_time){
        digitalWrite (buzzer,HIGH);
      } 
      //Apagamos timbre a los dos segundos
      if (segundostotal == rounds_time-2){
        digitalWrite (buzzer,LOW);
      }
        segundostotal--;    
        ahoras = ((segundostotal / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundostotal / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundostotal % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear ();lcd.setCursor(6,0);lcd.print("Round ");lcd.print(i);
        lcd.setCursor(2,2);
        lcd.print("Tiempo restante");        //Mostramos mensaje de tiempo restante
        lcd.setCursor(6,3);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
    digitalWrite (green_led,LOW);
    //Fin round
    //Cuando finaliza el delay si el round actual (i) es inferior al total activamos el descanso
    //Tiempo de descanso
    if(i < rounds){ 
      digitalWrite (yellow_led, HIGH); 
      segundosdescanso = rest_time;
      while (segundosdescanso > 0){
      delay (1000);          //Descontamos en periodos de 1 segundo
      if (segundosdescanso == rest_time){
        digitalWrite (buzzer,HIGH);
      } 
      //Apagamos timbre a los dos segundos
      if (segundosdescanso == rest_time-2){
        digitalWrite (buzzer,LOW);
      }
        segundosdescanso--;    
        ahoras = ((segundosdescanso / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundosdescanso / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundosdescanso % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear (); lcd.setCursor(2,0); lcd.print ("Round ");lcd.print (i); lcd.print (" Descanso");
        lcd.setCursor(2,2);
        lcd.print("Tiempo restante");        //Mostramos mensaje de tiempo restante
        lcd.setCursor(6,3);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
      digitalWrite(yellow_led, LOW); 
    }
  }
  //Cuando no se cuamplen las condiciones del for finalizamos entrenamiento
  //Activamos timbre 2 segundos ultimos round
  digitalWrite (buzzer,HIGH); 
  delay (2000);
  digitalWrite (buzzer,LOW);
  digitalWrite (red_led, HIGH); 
  //Mensaje fin entenamiento
  lcd.clear ();lcd.setCursor(3, 1);lcd.print("Fin entrenamiento"); 
  delay(5000);
}
