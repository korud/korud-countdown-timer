// include the library code:
#include <LiquidCrystal.h>
LiquidCrystal lcd (16, 17, 23, 25, 27, 29);

// Buttons
#define select_btn 2
#define ok_btn 3

// LEDs
#define green_led 10
#define yellow_led 9
#define red_led 8

// Buzzer
#define buzzer 37

int select_btn_state = 0; 
int select_btn_last_state = 0; 
int ok_btn_state = 0; 
int ok_btn_last_state = 0;
int i = 0;
int rounds = 0; 
long rounds_time = 0; 
long rest_time = 0;

void setup() {
  pinMode (select_btn, INPUT); 
  pinMode (ok_btn, INPUT);
  pinMode (green_led, OUTPUT); 
  pinMode (yellow_led, OUTPUT); 
  pinMode (red_led, OUTPUT);
  pinMode (buzzer, OUTPUT);
 //mensaje de inicio
  lcd.begin(20, 4); // set up the LCD's number of columns and rows
  lcd.print("Boxing Timer V1"); // Print a message to the LCD. 
  lcd.setCursor(0, 1); 
  lcd.print("By Tu puta madre"); 
  delay (1000); 
}

void loop() {
  //definimos variables a 0
  rounds = 0; 
  rounds_time = 0; 
  rest_time = 0;
  digitalWrite (red_led, HIGH); 
  //Pantalla inicial para elegir Rounds
  lcd.clear();lcd.print ("Rounds: 1-30?");lcd.setCursor(0,1);lcd.print ("Select para elegir");
  do{
    //leemos pulsaciones y convertimos a variable el valor
    select_btn_state = digitalRead(select_btn);
    ok_btn_state = digitalRead(ok_btn);
    //Si se detecta pulsacion en boton select sumamos 1 al valor anterior
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rounds = rounds + 1;  
        if(rounds == 31){
          rounds = 1;
        }
        //Actualizamos mensaje con el nuevo valor
        lcd.clear();lcd.print("Rounds: ");lcd.print(rounds);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }
  }while (ok_btn_last_state == 0); 
  //Mostramos Mensaje menu 2   
  lcd.clear(); lcd.print ("Tiempo Rounds: ?"); lcd.setCursor(0,1); lcd.print ("Select para elegir");delay(200); 
  //Definimos el ultimo estado del boton ok a 0
  ok_btn_last_state = 0;
  do{
    //leemos pulsaciones y convertimos a variable el valor
    select_btn_state = digitalRead(select_btn); 
    ok_btn_state = digitalRead(ok_btn);
    //Si se detecta pulsacion en boton select sumamos 30 al valor anterior
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rounds_time = rounds_time + 30;  
        //Reinicimos a en 330
          if(rounds_time == 330){
            rounds_time =30;
          }
        //Actualizmos mensaje del menu 2
        lcd.clear();lcd.print("Tiempo rounds: ");lcd.print(rounds_time);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }   
  }while (ok_btn_last_state == 0);
  //Mostramos Mensaje menu 3   
  lcd.clear();lcd.print ("Tiempo descanso: ?");lcd.setCursor(0,1);lcd.print ("Select para elegir");delay(200); 
  ok_btn_last_state = 0;
  do{
    select_btn_state = digitalRead(select_btn); 
    ok_btn_state = digitalRead(ok_btn);
    if (select_btn_state != select_btn_last_state){
      if(select_btn_state == HIGH){
        digitalWrite(red_led, LOW);
        rest_time = rest_time + 30;  
        //Reinicimos a en 330
          if(rest_time == 330){
            rest_time =30;
          }
          //Actualizmos mensaje del menu 3
        lcd.clear();lcd.print("Tiempo descanso: ");lcd.print(rest_time);lcd.setCursor(0,1);lcd.print("Ok para confirmar");
      }
    }
    //Esto no se porque  
    select_btn_last_state = select_btn_state; 
    //Si se detecta pulsacion en boton ok continumos
    if (ok_btn_state == HIGH){
      ok_btn_last_state ++;
    }   
  }while (ok_btn_last_state == 0);
    delay(200); 
    ok_btn_last_state = 0;
//-----------------------------------Fin menus----------------------------------------
  //Correr programa principal
  for (i=1; i<= rounds; i++) {
    //Encendemos timbre 2 segundos
    digitalWrite (buzzer,HIGH); 
    delay (2000); 
    digitalWrite (buzzer,LOW); 
    digitalWrite (green_led,HIGH);
    //Mostrar el round que se esta jugando 
    lcd.clear ();lcd.print("Round ");lcd.print(i);
    //Esperamos con el mensaje el tiempo seleccionado, Convertimos los segundo a milisegundos y esperamos 
    delay (rounds_time * 1000);
    digitalWrite (green_led,LOW);
    //Cuando finaliza el delay si el round actual (i) es inferior al total activamos el descanso
    if(i < rounds){ 
      //Timbre descanso 2 segundos
      digitalWrite (buzzer,HIGH); 
      delay (2000); 
      digitalWrite (buzzer, LOW); 
      digitalWrite (yellow_led, HIGH); 
      //Mensaje descanso
      lcd.clear (); lcd.print ("Round ");lcd.print (i); lcd.print (" Descanso");
      //Esperamos tiempo descanso y pasamos a milisegundos 
      delay (rest_time * 1000); 
      digitalWrite(yellow_led, LOW); 
    }
  }
  //Cuando no se cuamplen las condiciones del for finalizamos entrenamiento
  //Activamos timbre 2 segundos ultimos round
  digitalWrite (buzzer,HIGH); 
  delay (2000);
  digitalWrite (buzzer,LOW);
  digitalWrite (red_led, HIGH); 
  //Mensaje fin entenamiento
  lcd.setCursor(20, 4);lcd.clear();lcd.print("Fin entrenamiento"); 
  delay(5000);
}
