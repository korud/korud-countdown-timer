// include the library code:
#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

// Buttons
int lcd_key     = 0;
int adc_key_in  = 0;

#define btnRIGHT  0
#define btnUP     1
#define btnDOWN   2
#define btnLEFT   3
#define btnSELECT 4
#define btnNONE   5

int read_LCD_buttons()  
  { adc_key_in = analogRead(0);      // Leemos A0
    // Mis botones dan:  0, 145, 329,507,743
    // Y ahora los comparamos con un margen comodo
    if (adc_key_in > 900) return btnNONE;     // Ningun boton pulsado 
    if (adc_key_in < 50)   return btnRIGHT; 
    if (adc_key_in < 250)  return btnUP;
    if (adc_key_in < 450)  return btnDOWN;
    if (adc_key_in < 650)  return btnLEFT;
    if (adc_key_in < 850)  return btnSELECT; 

    return btnNONE;  // Por si todo falla
  }

// Buzzer
#define buzzer 2

// LEDs
#define green_led 3
#define yellow_led 4
#define red_led 5


// Definimos tiempos
int ahoras = 0;            //Variable a mostrar por LCD de las horas 
int aminutos = 0;          //Variable a mostrar por LCD de los minutos 
int asegundos = 0;         //Variable a mostrar por LCD de los segundos 
int segundosprevio = 0;   //Inciar variaable para para mostrar por LCD de los segundos
int segundostotal = 0;     //Tiempo total
int segundosdescanso = 0;  //Segundos de descanso
int tiempoprevio = 15;  //Segundos preparaciÃ³n antes del combate



int pasar_menu = 0; //para confirmar menu
int i = 0; //para mostrar la cuenta atras
int rounds = 0; 
long rounds_time = 0; 
long rest_time = 0;

void setup() {

  pinMode (green_led, OUTPUT); 
  pinMode (yellow_led, OUTPUT); 
  pinMode (red_led, OUTPUT);
  pinMode (buzzer, OUTPUT);
  //configuracion de pantalla columnas,filas
  lcd.begin(16, 2);
  //mensaje de inicio
  lcd.setCursor(0,0);lcd.print("Boxing Timer V2");lcd.setCursor(0, 1); lcd.print("By Korud");delay (1000); 
}

void loop() {
  //definimos variables a 0
  rounds = 0; 
  rounds_time = 0; 
  rest_time = 0;
  digitalWrite (red_led, HIGH); 

  
  //Opcion 1 para elegir numero de sesiones
  lcd.clear();lcd.print ("Rounds: 1-30?");lcd.setCursor(0,1);lcd.print ("Select");
  do{
    //leemos pulsaciones
    lcd_key = read_LCD_buttons();
    //Si se detecta pulsacion en boton select sumamos 1 al valor anterior
      if(lcd_key == btnUP || lcd_key == btnDOWN){ //Para poner una sola vez el mensaje. El delay del mensaje fuera del if produce pulsaciones que no se detectan.
        if(lcd_key == btnUP){     
        digitalWrite(red_led, LOW);
        rounds = rounds + 1;  
        if(rounds == 31){
          rounds = 1;
        }}
        if(lcd_key == btnDOWN){     
        digitalWrite(red_led, LOW);
        rounds = rounds - 1;  
        if(rounds == -1){
          rounds = 30;
        }}       
        //Actualizamos mensaje con el nuevo valor
        lcd.clear();lcd.print("Rounds: ");lcd.print(rounds);lcd.setCursor(0,1);lcd.print("Confirmar");
        delay(300); //Sino produce varios avances con una pulsacion.
      }
    
    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (lcd_key == btnSELECT){
      pasar_menu ++;
      delay(300);
    }


//Opcion 2 para elegir tiempo de sesion
  }while (pasar_menu == 0); 
  //Mostramos Mensaje menu 2   
  lcd.clear(); lcd.print ("Duracion: ?"); lcd.setCursor(0,1); lcd.print ("Select");delay(200); 
  //Definimos el ultimo estado del boton ok a 0
  pasar_menu = 0;
  do{
    lcd_key = read_LCD_buttons();
    
    //Si se detecta pulsacion en boton select sumamos 30 al valor anterior
      if(lcd_key == btnUP || lcd_key == btnDOWN){ //Para poner una sola vez el mensaje. El delay del mensaje fuera del if produce pulsaciones que no se detectan.
        digitalWrite(red_led, LOW);
         if(lcd_key == btnUP){ 
        rounds_time = rounds_time + 30;  
        //Reinicimos a en 330
          if(rounds_time == 330){
            rounds_time = 0;
          }}
          if(lcd_key == btnDOWN){     
          digitalWrite(red_led, LOW);
          rounds_time = rounds_time - 30;  
        //Reinicimos a en 330
          if(rounds_time == -30){
            rounds_time = 300;
        }}       
        //Actualizmos mensaje del menu 2
        lcd.clear();lcd.print("Duracion: ");lcd.print(rounds_time);lcd.setCursor(0,1);lcd.print("Confirmar");
        delay(300);
      }
    

    //Si se detecta pulsacion en boton ok continuamos al siguiente menu
    if (lcd_key == btnSELECT){
      pasar_menu ++;
      delay(300);
    }   

  //Opcion 3 Tiempo de descanso  
  }while (pasar_menu == 0);
  //Mostramos Mensaje menu 3   
  lcd.clear();lcd.print ("Descanso: ?");lcd.setCursor(0,1);lcd.print ("Select");delay(200); 
  pasar_menu = 0;
  do{
    lcd_key = read_LCD_buttons();
      if(lcd_key == btnUP || lcd_key == btnDOWN){ //Para poner una sola vez el mensaje. El delay del mensaje fuera del if produce pulsaciones que no se detectan.
        if(lcd_key == btnUP){
        digitalWrite(red_led, LOW);
        rest_time = rest_time + 30;  
        //Reinicimos a en 330
          if(rest_time == 330){
            rest_time = 0;
          }
        }
        if(lcd_key == btnDOWN){
        digitalWrite(red_led, LOW);
        rest_time = rest_time - 30;  
        //Reinicimos a en 330
          if(rest_time == -30){
            rest_time = 300;
          }
        }
        //Actualizmos mensaje del menu 3
        lcd.clear();lcd.print("Descanso: ");lcd.print(rest_time);lcd.setCursor(0,1);lcd.print("Confirmar");
        delay(300);
      }
      
    //Si se detecta pulsacion en boton ok continumos
    if (lcd_key == btnSELECT){
      pasar_menu ++;
    }   
  }while (pasar_menu == 0);
    delay(200); 
    pasar_menu = 0;
//-----------------------------------Fin menus----------------------------------------
  //tiempo preparacion
  segundosprevio = tiempoprevio; //Despues del bucle se queda en 0, Igualamos para tener valor en siguientes juegos.
  while (segundosprevio > 0){
      delay (1000);          //Descontamos en periodos de 1 segundo
        segundosprevio--;    
        ahoras = ((segundosprevio / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundosprevio / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundosprevio % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear (); lcd.setCursor(2,0); lcd.print ("Tiempo previo");
        lcd.setCursor(4,1);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
  //Correr programa principal
  //Tiempo de round
  for (i=1; i<= rounds; i++) {
    digitalWrite (green_led,HIGH);   
    
    segundostotal = rounds_time;
    while (segundostotal > 0){      
      delay (1000);          //Descontamos en periodos de 1 segundo
       //Encendemos Timbre en el segundo 0
      if (segundostotal == rounds_time){
        digitalWrite (buzzer,HIGH);
      } 
      //Apagamos timbre a los dos segundos
      if (segundostotal == rounds_time-2){
        digitalWrite (buzzer,LOW);
      }
        segundostotal--;    
        ahoras = ((segundostotal / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundostotal / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundostotal % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear ();lcd.setCursor(4,0);lcd.print("Round ");lcd.print(i);
        lcd.setCursor(4,1);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
    digitalWrite (green_led,LOW);
    //Fin round
    //Cuando finaliza el delay si el round actual (i) es inferior al total activamos el descanso
    //Tiempo de descanso
    if(i < rounds){ 
      digitalWrite (yellow_led, HIGH); 
      segundosdescanso = rest_time;
      while (segundosdescanso > 0){
      delay (1000);          //Descontamos en periodos de 1 segundo
      if (segundosdescanso == rest_time){
        digitalWrite (buzzer,HIGH);
      } 
      //Apagamos timbre a los dos segundos
      if (segundosdescanso == rest_time-2){
        digitalWrite (buzzer,LOW);
      }
        segundosdescanso--;    
        ahoras = ((segundosdescanso / 60)/ 60);   //Convertimos los segundos totales en horas
        aminutos = (segundosdescanso / 60) % 60;  //Convertimos los segundos totales en minutos
        asegundos = segundosdescanso % 60;        //Convertimos los segundos totales en periodos de 60 segundos 
        //Mostrar el round que se esta jugando 
        lcd.clear (); lcd.setCursor(0,0); lcd.print ("Round ");lcd.print (i); lcd.print (" Descanso");
        lcd.setCursor(3,2);
        if (ahoras < 10) lcd.print("0");     // Si las horas son menor que 10, pone un "0" delante.
        lcd.print(ahoras);                   // Sin este codigo, se muestra asi: H:M:S  (1:M:S)
        lcd.print(":");
        if (aminutos < 10) lcd.print("0");   // Si los minutos son menor que 10, pone un "0" delante.
        lcd.print(aminutos);                 // Sin este codigo, se muestra asi: H:M:S  (H:1:S)
        lcd.print(":");
        if (asegundos < 10) lcd.print("0");  // si el valor de segundo esta por debajo de 9 (unidad) antepone un cero
        lcd.print(asegundos);                // Sin este codigo, se muestra asi: H:M:S  (H:M:1)       
    }
      digitalWrite(yellow_led, LOW); 
    }
  }
  //Cuando no se cuamplen las condiciones del for finalizamos entrenamiento
  //Activamos timbre 2 segundos ultimos round
  digitalWrite (buzzer,HIGH); 
  delay (2000);
  digitalWrite (buzzer,LOW);
  digitalWrite (red_led, HIGH); 
  //Mensaje fin entenamiento
  lcd.clear ();lcd.setCursor(0, 0);lcd.print("Fin entrenamiento"); 
  delay(5000);
}
